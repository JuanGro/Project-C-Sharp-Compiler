Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement
Rule 2     statement_list -> statement_list statement
Rule 3     statement -> expression_statement
Rule 4     statement -> selection_statement
Rule 5     statement -> iteration_statement
Rule 6     expression_statement -> declaration_expression SEMI
Rule 7     expression_statement -> output_expression SEMI
Rule 8     expression_statement -> input_expression SEMI
Rule 9     declaration_expression -> assignment_expression
Rule 10    declaration_expression -> type_specifier declaration_expression
Rule 11    selection_statement -> IF conditional_expression block_statement_list
Rule 12    selection_statement -> selection_statement ELSE block_statement_list
Rule 13    iteration_statement -> WHILE conditional_expression block_statement_list
Rule 14    iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI
Rule 15    block_statement_list -> LBRACE statement_list RBRACE
Rule 16    conditional_expression -> LPAREN logical_expression RPAREN
Rule 17    assignment_expression -> variable_expression
Rule 18    assignment_expression -> assignment_expression EQUALS logical_expression
Rule 19    assignment_expression -> assignment_expression EQUALS input_expression
Rule 20    logical_expression -> equality_expression
Rule 21    logical_expression -> logical_expression logical_operators equality_expression
Rule 22    equality_expression -> relational_expression
Rule 23    equality_expression -> equality_expression equality_operators relational_expression
Rule 24    relational_expression -> math_expression
Rule 25    relational_expression -> relational_expression relational_operators math_expression
Rule 26    math_expression -> primary_expression
Rule 27    math_expression -> math_expression math_operators primary_expression
Rule 28    input_expression -> CONSOLE DOT READLINE
Rule 29    output_expression -> CONSOLE DOT WRITELINE conditional_expression
Rule 30    type_specifier -> INT
Rule 31    type_specifier -> BOOL
Rule 32    type_specifier -> STRING
Rule 33    logical_operators -> LAND
Rule 34    logical_operators -> LOR
Rule 35    equality_operators -> EQ
Rule 36    equality_operators -> NE
Rule 37    relational_operators -> LT
Rule 38    relational_operators -> GT
Rule 39    relational_operators -> LE
Rule 40    relational_operators -> GE
Rule 41    math_operators -> PLUS
Rule 42    math_operators -> MINUS
Rule 43    math_operators -> TIMES
Rule 44    math_operators -> DIVIDE
Rule 45    primary_expression -> variable_expression
Rule 46    primary_expression -> DIGIT
Rule 47    primary_expression -> STRING_SENTENCE
Rule 48    variable_expression -> ID

Terminals, with rules where they appear

BOOL                 : 31
CONSOLE              : 28 29
DIGIT                : 46
DIVIDE               : 44
DO                   : 14
DOT                  : 28 29
ELSE                 : 12
EQ                   : 35
EQUALS               : 18 19
GE                   : 40
GT                   : 38
ID                   : 48
IF                   : 11
INT                  : 30
LAND                 : 33
LBRACE               : 15
LE                   : 39
LOR                  : 34
LPAREN               : 16
LT                   : 37
MINUS                : 42
NE                   : 36
PLUS                 : 41
RBRACE               : 15
READLINE             : 28
RPAREN               : 16
SEMI                 : 6 7 8 14
STRING               : 32
STRING_SENTENCE      : 47
TIMES                : 43
WHILE                : 13 14
WRITELINE            : 29
error                : 

Nonterminals, with rules where they appear

assignment_expression : 9 18 19
block_statement_list : 11 12 13 14
conditional_expression : 11 13 14 29
declaration_expression : 6 10
equality_expression  : 20 21 23
equality_operators   : 23
expression_statement : 3
input_expression     : 8 19
iteration_statement  : 5
logical_expression   : 16 18 21
logical_operators    : 21
math_expression      : 24 25 27
math_operators       : 27
output_expression    : 7
primary_expression   : 26 27
relational_expression : 22 23 25
relational_operators : 25
selection_statement  : 4 12
statement            : 1 2
statement_list       : 2 15 0
type_specifier       : 10
variable_expression  : 17 45

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . expression_statement
    (4) statement -> . selection_statement
    (5) statement -> . iteration_statement
    (6) expression_statement -> . declaration_expression SEMI
    (7) expression_statement -> . output_expression SEMI
    (8) expression_statement -> . input_expression SEMI
    (11) selection_statement -> . IF conditional_expression block_statement_list
    (12) selection_statement -> . selection_statement ELSE block_statement_list
    (13) iteration_statement -> . WHILE conditional_expression block_statement_list
    (14) iteration_statement -> . DO block_statement_list WHILE conditional_expression SEMI
    (9) declaration_expression -> . assignment_expression
    (10) declaration_expression -> . type_specifier declaration_expression
    (29) output_expression -> . CONSOLE DOT WRITELINE conditional_expression
    (28) input_expression -> . CONSOLE DOT READLINE
    (17) assignment_expression -> . variable_expression
    (18) assignment_expression -> . assignment_expression EQUALS logical_expression
    (19) assignment_expression -> . assignment_expression EQUALS input_expression
    (30) type_specifier -> . INT
    (31) type_specifier -> . BOOL
    (32) type_specifier -> . STRING
    (48) variable_expression -> . ID

    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    CONSOLE         shift and go to state 14
    INT             shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 19

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    expression_statement           shift and go to state 3
    selection_statement            shift and go to state 4
    iteration_statement            shift and go to state 5
    declaration_expression         shift and go to state 6
    output_expression              shift and go to state 7
    input_expression               shift and go to state 8
    assignment_expression          shift and go to state 12
    type_specifier                 shift and go to state 13
    variable_expression            shift and go to state 15

state 1

    (0) S' -> statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . expression_statement
    (4) statement -> . selection_statement
    (5) statement -> . iteration_statement
    (6) expression_statement -> . declaration_expression SEMI
    (7) expression_statement -> . output_expression SEMI
    (8) expression_statement -> . input_expression SEMI
    (11) selection_statement -> . IF conditional_expression block_statement_list
    (12) selection_statement -> . selection_statement ELSE block_statement_list
    (13) iteration_statement -> . WHILE conditional_expression block_statement_list
    (14) iteration_statement -> . DO block_statement_list WHILE conditional_expression SEMI
    (9) declaration_expression -> . assignment_expression
    (10) declaration_expression -> . type_specifier declaration_expression
    (29) output_expression -> . CONSOLE DOT WRITELINE conditional_expression
    (28) input_expression -> . CONSOLE DOT READLINE
    (17) assignment_expression -> . variable_expression
    (18) assignment_expression -> . assignment_expression EQUALS logical_expression
    (19) assignment_expression -> . assignment_expression EQUALS input_expression
    (30) type_specifier -> . INT
    (31) type_specifier -> . BOOL
    (32) type_specifier -> . STRING
    (48) variable_expression -> . ID

    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    CONSOLE         shift and go to state 14
    INT             shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 19

    statement                      shift and go to state 20
    expression_statement           shift and go to state 3
    selection_statement            shift and go to state 4
    iteration_statement            shift and go to state 5
    declaration_expression         shift and go to state 6
    output_expression              shift and go to state 7
    input_expression               shift and go to state 8
    assignment_expression          shift and go to state 12
    type_specifier                 shift and go to state 13
    variable_expression            shift and go to state 15

state 2

    (1) statement_list -> statement .

    IF              reduce using rule 1 (statement_list -> statement .)
    WHILE           reduce using rule 1 (statement_list -> statement .)
    DO              reduce using rule 1 (statement_list -> statement .)
    CONSOLE         reduce using rule 1 (statement_list -> statement .)
    INT             reduce using rule 1 (statement_list -> statement .)
    BOOL            reduce using rule 1 (statement_list -> statement .)
    STRING          reduce using rule 1 (statement_list -> statement .)
    ID              reduce using rule 1 (statement_list -> statement .)
    $end            reduce using rule 1 (statement_list -> statement .)
    RBRACE          reduce using rule 1 (statement_list -> statement .)


state 3

    (3) statement -> expression_statement .

    IF              reduce using rule 3 (statement -> expression_statement .)
    WHILE           reduce using rule 3 (statement -> expression_statement .)
    DO              reduce using rule 3 (statement -> expression_statement .)
    CONSOLE         reduce using rule 3 (statement -> expression_statement .)
    INT             reduce using rule 3 (statement -> expression_statement .)
    BOOL            reduce using rule 3 (statement -> expression_statement .)
    STRING          reduce using rule 3 (statement -> expression_statement .)
    ID              reduce using rule 3 (statement -> expression_statement .)
    $end            reduce using rule 3 (statement -> expression_statement .)
    RBRACE          reduce using rule 3 (statement -> expression_statement .)


state 4

    (4) statement -> selection_statement .
    (12) selection_statement -> selection_statement . ELSE block_statement_list

    IF              reduce using rule 4 (statement -> selection_statement .)
    WHILE           reduce using rule 4 (statement -> selection_statement .)
    DO              reduce using rule 4 (statement -> selection_statement .)
    CONSOLE         reduce using rule 4 (statement -> selection_statement .)
    INT             reduce using rule 4 (statement -> selection_statement .)
    BOOL            reduce using rule 4 (statement -> selection_statement .)
    STRING          reduce using rule 4 (statement -> selection_statement .)
    ID              reduce using rule 4 (statement -> selection_statement .)
    $end            reduce using rule 4 (statement -> selection_statement .)
    RBRACE          reduce using rule 4 (statement -> selection_statement .)
    ELSE            shift and go to state 21


state 5

    (5) statement -> iteration_statement .

    IF              reduce using rule 5 (statement -> iteration_statement .)
    WHILE           reduce using rule 5 (statement -> iteration_statement .)
    DO              reduce using rule 5 (statement -> iteration_statement .)
    CONSOLE         reduce using rule 5 (statement -> iteration_statement .)
    INT             reduce using rule 5 (statement -> iteration_statement .)
    BOOL            reduce using rule 5 (statement -> iteration_statement .)
    STRING          reduce using rule 5 (statement -> iteration_statement .)
    ID              reduce using rule 5 (statement -> iteration_statement .)
    $end            reduce using rule 5 (statement -> iteration_statement .)
    RBRACE          reduce using rule 5 (statement -> iteration_statement .)


state 6

    (6) expression_statement -> declaration_expression . SEMI

    SEMI            shift and go to state 22


state 7

    (7) expression_statement -> output_expression . SEMI

    SEMI            shift and go to state 23


state 8

    (8) expression_statement -> input_expression . SEMI

    SEMI            shift and go to state 24


state 9

    (11) selection_statement -> IF . conditional_expression block_statement_list
    (16) conditional_expression -> . LPAREN logical_expression RPAREN

    LPAREN          shift and go to state 26

    conditional_expression         shift and go to state 25

state 10

    (13) iteration_statement -> WHILE . conditional_expression block_statement_list
    (16) conditional_expression -> . LPAREN logical_expression RPAREN

    LPAREN          shift and go to state 26

    conditional_expression         shift and go to state 27

state 11

    (14) iteration_statement -> DO . block_statement_list WHILE conditional_expression SEMI
    (15) block_statement_list -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 29

    block_statement_list           shift and go to state 28

state 12

    (9) declaration_expression -> assignment_expression .
    (18) assignment_expression -> assignment_expression . EQUALS logical_expression
    (19) assignment_expression -> assignment_expression . EQUALS input_expression

    SEMI            reduce using rule 9 (declaration_expression -> assignment_expression .)
    EQUALS          shift and go to state 30


state 13

    (10) declaration_expression -> type_specifier . declaration_expression
    (9) declaration_expression -> . assignment_expression
    (10) declaration_expression -> . type_specifier declaration_expression
    (17) assignment_expression -> . variable_expression
    (18) assignment_expression -> . assignment_expression EQUALS logical_expression
    (19) assignment_expression -> . assignment_expression EQUALS input_expression
    (30) type_specifier -> . INT
    (31) type_specifier -> . BOOL
    (32) type_specifier -> . STRING
    (48) variable_expression -> . ID

    INT             shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 19

    type_specifier                 shift and go to state 13
    declaration_expression         shift and go to state 31
    assignment_expression          shift and go to state 12
    variable_expression            shift and go to state 15

state 14

    (29) output_expression -> CONSOLE . DOT WRITELINE conditional_expression
    (28) input_expression -> CONSOLE . DOT READLINE

    DOT             shift and go to state 32


state 15

    (17) assignment_expression -> variable_expression .

    EQUALS          reduce using rule 17 (assignment_expression -> variable_expression .)
    SEMI            reduce using rule 17 (assignment_expression -> variable_expression .)


state 16

    (30) type_specifier -> INT .

    INT             reduce using rule 30 (type_specifier -> INT .)
    BOOL            reduce using rule 30 (type_specifier -> INT .)
    STRING          reduce using rule 30 (type_specifier -> INT .)
    ID              reduce using rule 30 (type_specifier -> INT .)


state 17

    (31) type_specifier -> BOOL .

    INT             reduce using rule 31 (type_specifier -> BOOL .)
    BOOL            reduce using rule 31 (type_specifier -> BOOL .)
    STRING          reduce using rule 31 (type_specifier -> BOOL .)
    ID              reduce using rule 31 (type_specifier -> BOOL .)


state 18

    (32) type_specifier -> STRING .

    INT             reduce using rule 32 (type_specifier -> STRING .)
    BOOL            reduce using rule 32 (type_specifier -> STRING .)
    STRING          reduce using rule 32 (type_specifier -> STRING .)
    ID              reduce using rule 32 (type_specifier -> STRING .)


state 19

    (48) variable_expression -> ID .

    EQUALS          reduce using rule 48 (variable_expression -> ID .)
    SEMI            reduce using rule 48 (variable_expression -> ID .)
    PLUS            reduce using rule 48 (variable_expression -> ID .)
    MINUS           reduce using rule 48 (variable_expression -> ID .)
    TIMES           reduce using rule 48 (variable_expression -> ID .)
    DIVIDE          reduce using rule 48 (variable_expression -> ID .)
    LT              reduce using rule 48 (variable_expression -> ID .)
    GT              reduce using rule 48 (variable_expression -> ID .)
    LE              reduce using rule 48 (variable_expression -> ID .)
    GE              reduce using rule 48 (variable_expression -> ID .)
    EQ              reduce using rule 48 (variable_expression -> ID .)
    NE              reduce using rule 48 (variable_expression -> ID .)
    RPAREN          reduce using rule 48 (variable_expression -> ID .)
    LAND            reduce using rule 48 (variable_expression -> ID .)
    LOR             reduce using rule 48 (variable_expression -> ID .)


state 20

    (2) statement_list -> statement_list statement .

    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    DO              reduce using rule 2 (statement_list -> statement_list statement .)
    CONSOLE         reduce using rule 2 (statement_list -> statement_list statement .)
    INT             reduce using rule 2 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 21

    (12) selection_statement -> selection_statement ELSE . block_statement_list
    (15) block_statement_list -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 29

    block_statement_list           shift and go to state 33

state 22

    (6) expression_statement -> declaration_expression SEMI .

    IF              reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    WHILE           reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    DO              reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    CONSOLE         reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    INT             reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    BOOL            reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    STRING          reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    ID              reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    $end            reduce using rule 6 (expression_statement -> declaration_expression SEMI .)
    RBRACE          reduce using rule 6 (expression_statement -> declaration_expression SEMI .)


state 23

    (7) expression_statement -> output_expression SEMI .

    IF              reduce using rule 7 (expression_statement -> output_expression SEMI .)
    WHILE           reduce using rule 7 (expression_statement -> output_expression SEMI .)
    DO              reduce using rule 7 (expression_statement -> output_expression SEMI .)
    CONSOLE         reduce using rule 7 (expression_statement -> output_expression SEMI .)
    INT             reduce using rule 7 (expression_statement -> output_expression SEMI .)
    BOOL            reduce using rule 7 (expression_statement -> output_expression SEMI .)
    STRING          reduce using rule 7 (expression_statement -> output_expression SEMI .)
    ID              reduce using rule 7 (expression_statement -> output_expression SEMI .)
    $end            reduce using rule 7 (expression_statement -> output_expression SEMI .)
    RBRACE          reduce using rule 7 (expression_statement -> output_expression SEMI .)


state 24

    (8) expression_statement -> input_expression SEMI .

    IF              reduce using rule 8 (expression_statement -> input_expression SEMI .)
    WHILE           reduce using rule 8 (expression_statement -> input_expression SEMI .)
    DO              reduce using rule 8 (expression_statement -> input_expression SEMI .)
    CONSOLE         reduce using rule 8 (expression_statement -> input_expression SEMI .)
    INT             reduce using rule 8 (expression_statement -> input_expression SEMI .)
    BOOL            reduce using rule 8 (expression_statement -> input_expression SEMI .)
    STRING          reduce using rule 8 (expression_statement -> input_expression SEMI .)
    ID              reduce using rule 8 (expression_statement -> input_expression SEMI .)
    $end            reduce using rule 8 (expression_statement -> input_expression SEMI .)
    RBRACE          reduce using rule 8 (expression_statement -> input_expression SEMI .)


state 25

    (11) selection_statement -> IF conditional_expression . block_statement_list
    (15) block_statement_list -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 29

    block_statement_list           shift and go to state 34

state 26

    (16) conditional_expression -> LPAREN . logical_expression RPAREN
    (20) logical_expression -> . equality_expression
    (21) logical_expression -> . logical_expression logical_operators equality_expression
    (22) equality_expression -> . relational_expression
    (23) equality_expression -> . equality_expression equality_operators relational_expression
    (24) relational_expression -> . math_expression
    (25) relational_expression -> . relational_expression relational_operators math_expression
    (26) math_expression -> . primary_expression
    (27) math_expression -> . math_expression math_operators primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    logical_expression             shift and go to state 35
    equality_expression            shift and go to state 36
    relational_expression          shift and go to state 37
    math_expression                shift and go to state 38
    primary_expression             shift and go to state 39
    variable_expression            shift and go to state 40

state 27

    (13) iteration_statement -> WHILE conditional_expression . block_statement_list
    (15) block_statement_list -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 29

    block_statement_list           shift and go to state 43

state 28

    (14) iteration_statement -> DO block_statement_list . WHILE conditional_expression SEMI

    WHILE           shift and go to state 44


state 29

    (15) block_statement_list -> LBRACE . statement_list RBRACE
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . expression_statement
    (4) statement -> . selection_statement
    (5) statement -> . iteration_statement
    (6) expression_statement -> . declaration_expression SEMI
    (7) expression_statement -> . output_expression SEMI
    (8) expression_statement -> . input_expression SEMI
    (11) selection_statement -> . IF conditional_expression block_statement_list
    (12) selection_statement -> . selection_statement ELSE block_statement_list
    (13) iteration_statement -> . WHILE conditional_expression block_statement_list
    (14) iteration_statement -> . DO block_statement_list WHILE conditional_expression SEMI
    (9) declaration_expression -> . assignment_expression
    (10) declaration_expression -> . type_specifier declaration_expression
    (29) output_expression -> . CONSOLE DOT WRITELINE conditional_expression
    (28) input_expression -> . CONSOLE DOT READLINE
    (17) assignment_expression -> . variable_expression
    (18) assignment_expression -> . assignment_expression EQUALS logical_expression
    (19) assignment_expression -> . assignment_expression EQUALS input_expression
    (30) type_specifier -> . INT
    (31) type_specifier -> . BOOL
    (32) type_specifier -> . STRING
    (48) variable_expression -> . ID

    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    CONSOLE         shift and go to state 14
    INT             shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 19

    statement_list                 shift and go to state 45
    statement                      shift and go to state 2
    expression_statement           shift and go to state 3
    selection_statement            shift and go to state 4
    iteration_statement            shift and go to state 5
    declaration_expression         shift and go to state 6
    output_expression              shift and go to state 7
    input_expression               shift and go to state 8
    assignment_expression          shift and go to state 12
    type_specifier                 shift and go to state 13
    variable_expression            shift and go to state 15

state 30

    (18) assignment_expression -> assignment_expression EQUALS . logical_expression
    (19) assignment_expression -> assignment_expression EQUALS . input_expression
    (20) logical_expression -> . equality_expression
    (21) logical_expression -> . logical_expression logical_operators equality_expression
    (28) input_expression -> . CONSOLE DOT READLINE
    (22) equality_expression -> . relational_expression
    (23) equality_expression -> . equality_expression equality_operators relational_expression
    (24) relational_expression -> . math_expression
    (25) relational_expression -> . relational_expression relational_operators math_expression
    (26) math_expression -> . primary_expression
    (27) math_expression -> . math_expression math_operators primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    CONSOLE         shift and go to state 48
    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    logical_expression             shift and go to state 46
    input_expression               shift and go to state 47
    equality_expression            shift and go to state 36
    relational_expression          shift and go to state 37
    math_expression                shift and go to state 38
    primary_expression             shift and go to state 39
    variable_expression            shift and go to state 40

state 31

    (10) declaration_expression -> type_specifier declaration_expression .

    SEMI            reduce using rule 10 (declaration_expression -> type_specifier declaration_expression .)


state 32

    (29) output_expression -> CONSOLE DOT . WRITELINE conditional_expression
    (28) input_expression -> CONSOLE DOT . READLINE

    WRITELINE       shift and go to state 49
    READLINE        shift and go to state 50


state 33

    (12) selection_statement -> selection_statement ELSE block_statement_list .

    ELSE            reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    IF              reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    WHILE           reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    DO              reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    CONSOLE         reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    INT             reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    BOOL            reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    STRING          reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    ID              reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    $end            reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)
    RBRACE          reduce using rule 12 (selection_statement -> selection_statement ELSE block_statement_list .)


state 34

    (11) selection_statement -> IF conditional_expression block_statement_list .

    ELSE            reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    IF              reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    WHILE           reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    DO              reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    CONSOLE         reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    INT             reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    BOOL            reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    STRING          reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    ID              reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    $end            reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)
    RBRACE          reduce using rule 11 (selection_statement -> IF conditional_expression block_statement_list .)


state 35

    (16) conditional_expression -> LPAREN logical_expression . RPAREN
    (21) logical_expression -> logical_expression . logical_operators equality_expression
    (33) logical_operators -> . LAND
    (34) logical_operators -> . LOR

    RPAREN          shift and go to state 51
    LAND            shift and go to state 53
    LOR             shift and go to state 54

    logical_operators              shift and go to state 52

state 36

    (20) logical_expression -> equality_expression .
    (23) equality_expression -> equality_expression . equality_operators relational_expression
    (35) equality_operators -> . EQ
    (36) equality_operators -> . NE

    RPAREN          reduce using rule 20 (logical_expression -> equality_expression .)
    LAND            reduce using rule 20 (logical_expression -> equality_expression .)
    LOR             reduce using rule 20 (logical_expression -> equality_expression .)
    EQUALS          reduce using rule 20 (logical_expression -> equality_expression .)
    SEMI            reduce using rule 20 (logical_expression -> equality_expression .)
    EQ              shift and go to state 56
    NE              shift and go to state 57

    equality_operators             shift and go to state 55

state 37

    (22) equality_expression -> relational_expression .
    (25) relational_expression -> relational_expression . relational_operators math_expression
    (37) relational_operators -> . LT
    (38) relational_operators -> . GT
    (39) relational_operators -> . LE
    (40) relational_operators -> . GE

    EQ              reduce using rule 22 (equality_expression -> relational_expression .)
    NE              reduce using rule 22 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 22 (equality_expression -> relational_expression .)
    LAND            reduce using rule 22 (equality_expression -> relational_expression .)
    LOR             reduce using rule 22 (equality_expression -> relational_expression .)
    EQUALS          reduce using rule 22 (equality_expression -> relational_expression .)
    SEMI            reduce using rule 22 (equality_expression -> relational_expression .)
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62

    relational_operators           shift and go to state 58

state 38

    (24) relational_expression -> math_expression .
    (27) math_expression -> math_expression . math_operators primary_expression
    (41) math_operators -> . PLUS
    (42) math_operators -> . MINUS
    (43) math_operators -> . TIMES
    (44) math_operators -> . DIVIDE

    LT              reduce using rule 24 (relational_expression -> math_expression .)
    GT              reduce using rule 24 (relational_expression -> math_expression .)
    LE              reduce using rule 24 (relational_expression -> math_expression .)
    GE              reduce using rule 24 (relational_expression -> math_expression .)
    EQ              reduce using rule 24 (relational_expression -> math_expression .)
    NE              reduce using rule 24 (relational_expression -> math_expression .)
    RPAREN          reduce using rule 24 (relational_expression -> math_expression .)
    LAND            reduce using rule 24 (relational_expression -> math_expression .)
    LOR             reduce using rule 24 (relational_expression -> math_expression .)
    EQUALS          reduce using rule 24 (relational_expression -> math_expression .)
    SEMI            reduce using rule 24 (relational_expression -> math_expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67

    math_operators                 shift and go to state 63

state 39

    (26) math_expression -> primary_expression .

    PLUS            reduce using rule 26 (math_expression -> primary_expression .)
    MINUS           reduce using rule 26 (math_expression -> primary_expression .)
    TIMES           reduce using rule 26 (math_expression -> primary_expression .)
    DIVIDE          reduce using rule 26 (math_expression -> primary_expression .)
    LT              reduce using rule 26 (math_expression -> primary_expression .)
    GT              reduce using rule 26 (math_expression -> primary_expression .)
    LE              reduce using rule 26 (math_expression -> primary_expression .)
    GE              reduce using rule 26 (math_expression -> primary_expression .)
    EQ              reduce using rule 26 (math_expression -> primary_expression .)
    NE              reduce using rule 26 (math_expression -> primary_expression .)
    RPAREN          reduce using rule 26 (math_expression -> primary_expression .)
    LAND            reduce using rule 26 (math_expression -> primary_expression .)
    LOR             reduce using rule 26 (math_expression -> primary_expression .)
    EQUALS          reduce using rule 26 (math_expression -> primary_expression .)
    SEMI            reduce using rule 26 (math_expression -> primary_expression .)


state 40

    (45) primary_expression -> variable_expression .

    PLUS            reduce using rule 45 (primary_expression -> variable_expression .)
    MINUS           reduce using rule 45 (primary_expression -> variable_expression .)
    TIMES           reduce using rule 45 (primary_expression -> variable_expression .)
    DIVIDE          reduce using rule 45 (primary_expression -> variable_expression .)
    LT              reduce using rule 45 (primary_expression -> variable_expression .)
    GT              reduce using rule 45 (primary_expression -> variable_expression .)
    LE              reduce using rule 45 (primary_expression -> variable_expression .)
    GE              reduce using rule 45 (primary_expression -> variable_expression .)
    EQ              reduce using rule 45 (primary_expression -> variable_expression .)
    NE              reduce using rule 45 (primary_expression -> variable_expression .)
    RPAREN          reduce using rule 45 (primary_expression -> variable_expression .)
    LAND            reduce using rule 45 (primary_expression -> variable_expression .)
    LOR             reduce using rule 45 (primary_expression -> variable_expression .)
    EQUALS          reduce using rule 45 (primary_expression -> variable_expression .)
    SEMI            reduce using rule 45 (primary_expression -> variable_expression .)


state 41

    (46) primary_expression -> DIGIT .

    PLUS            reduce using rule 46 (primary_expression -> DIGIT .)
    MINUS           reduce using rule 46 (primary_expression -> DIGIT .)
    TIMES           reduce using rule 46 (primary_expression -> DIGIT .)
    DIVIDE          reduce using rule 46 (primary_expression -> DIGIT .)
    LT              reduce using rule 46 (primary_expression -> DIGIT .)
    GT              reduce using rule 46 (primary_expression -> DIGIT .)
    LE              reduce using rule 46 (primary_expression -> DIGIT .)
    GE              reduce using rule 46 (primary_expression -> DIGIT .)
    EQ              reduce using rule 46 (primary_expression -> DIGIT .)
    NE              reduce using rule 46 (primary_expression -> DIGIT .)
    RPAREN          reduce using rule 46 (primary_expression -> DIGIT .)
    LAND            reduce using rule 46 (primary_expression -> DIGIT .)
    LOR             reduce using rule 46 (primary_expression -> DIGIT .)
    EQUALS          reduce using rule 46 (primary_expression -> DIGIT .)
    SEMI            reduce using rule 46 (primary_expression -> DIGIT .)


state 42

    (47) primary_expression -> STRING_SENTENCE .

    PLUS            reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    MINUS           reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    TIMES           reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    DIVIDE          reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    LT              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    GT              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    LE              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    GE              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    EQ              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    NE              reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    RPAREN          reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    LAND            reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    LOR             reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    EQUALS          reduce using rule 47 (primary_expression -> STRING_SENTENCE .)
    SEMI            reduce using rule 47 (primary_expression -> STRING_SENTENCE .)


state 43

    (13) iteration_statement -> WHILE conditional_expression block_statement_list .

    IF              reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    WHILE           reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    DO              reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    CONSOLE         reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    INT             reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    BOOL            reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    STRING          reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    ID              reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    $end            reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)
    RBRACE          reduce using rule 13 (iteration_statement -> WHILE conditional_expression block_statement_list .)


state 44

    (14) iteration_statement -> DO block_statement_list WHILE . conditional_expression SEMI
    (16) conditional_expression -> . LPAREN logical_expression RPAREN

    LPAREN          shift and go to state 26

    conditional_expression         shift and go to state 68

state 45

    (15) block_statement_list -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (3) statement -> . expression_statement
    (4) statement -> . selection_statement
    (5) statement -> . iteration_statement
    (6) expression_statement -> . declaration_expression SEMI
    (7) expression_statement -> . output_expression SEMI
    (8) expression_statement -> . input_expression SEMI
    (11) selection_statement -> . IF conditional_expression block_statement_list
    (12) selection_statement -> . selection_statement ELSE block_statement_list
    (13) iteration_statement -> . WHILE conditional_expression block_statement_list
    (14) iteration_statement -> . DO block_statement_list WHILE conditional_expression SEMI
    (9) declaration_expression -> . assignment_expression
    (10) declaration_expression -> . type_specifier declaration_expression
    (29) output_expression -> . CONSOLE DOT WRITELINE conditional_expression
    (28) input_expression -> . CONSOLE DOT READLINE
    (17) assignment_expression -> . variable_expression
    (18) assignment_expression -> . assignment_expression EQUALS logical_expression
    (19) assignment_expression -> . assignment_expression EQUALS input_expression
    (30) type_specifier -> . INT
    (31) type_specifier -> . BOOL
    (32) type_specifier -> . STRING
    (48) variable_expression -> . ID

    RBRACE          shift and go to state 69
    IF              shift and go to state 9
    WHILE           shift and go to state 10
    DO              shift and go to state 11
    CONSOLE         shift and go to state 14
    INT             shift and go to state 16
    BOOL            shift and go to state 17
    STRING          shift and go to state 18
    ID              shift and go to state 19

    statement                      shift and go to state 20
    expression_statement           shift and go to state 3
    selection_statement            shift and go to state 4
    iteration_statement            shift and go to state 5
    declaration_expression         shift and go to state 6
    output_expression              shift and go to state 7
    input_expression               shift and go to state 8
    assignment_expression          shift and go to state 12
    type_specifier                 shift and go to state 13
    variable_expression            shift and go to state 15

state 46

    (18) assignment_expression -> assignment_expression EQUALS logical_expression .
    (21) logical_expression -> logical_expression . logical_operators equality_expression
    (33) logical_operators -> . LAND
    (34) logical_operators -> . LOR

    EQUALS          reduce using rule 18 (assignment_expression -> assignment_expression EQUALS logical_expression .)
    SEMI            reduce using rule 18 (assignment_expression -> assignment_expression EQUALS logical_expression .)
    LAND            shift and go to state 53
    LOR             shift and go to state 54

    logical_operators              shift and go to state 52

state 47

    (19) assignment_expression -> assignment_expression EQUALS input_expression .

    EQUALS          reduce using rule 19 (assignment_expression -> assignment_expression EQUALS input_expression .)
    SEMI            reduce using rule 19 (assignment_expression -> assignment_expression EQUALS input_expression .)


state 48

    (28) input_expression -> CONSOLE . DOT READLINE

    DOT             shift and go to state 70


state 49

    (29) output_expression -> CONSOLE DOT WRITELINE . conditional_expression
    (16) conditional_expression -> . LPAREN logical_expression RPAREN

    LPAREN          shift and go to state 26

    conditional_expression         shift and go to state 71

state 50

    (28) input_expression -> CONSOLE DOT READLINE .

    SEMI            reduce using rule 28 (input_expression -> CONSOLE DOT READLINE .)
    EQUALS          reduce using rule 28 (input_expression -> CONSOLE DOT READLINE .)


state 51

    (16) conditional_expression -> LPAREN logical_expression RPAREN .

    LBRACE          reduce using rule 16 (conditional_expression -> LPAREN logical_expression RPAREN .)
    SEMI            reduce using rule 16 (conditional_expression -> LPAREN logical_expression RPAREN .)


state 52

    (21) logical_expression -> logical_expression logical_operators . equality_expression
    (22) equality_expression -> . relational_expression
    (23) equality_expression -> . equality_expression equality_operators relational_expression
    (24) relational_expression -> . math_expression
    (25) relational_expression -> . relational_expression relational_operators math_expression
    (26) math_expression -> . primary_expression
    (27) math_expression -> . math_expression math_operators primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    equality_expression            shift and go to state 72
    relational_expression          shift and go to state 37
    math_expression                shift and go to state 38
    primary_expression             shift and go to state 39
    variable_expression            shift and go to state 40

state 53

    (33) logical_operators -> LAND .

    DIGIT           reduce using rule 33 (logical_operators -> LAND .)
    STRING_SENTENCE reduce using rule 33 (logical_operators -> LAND .)
    ID              reduce using rule 33 (logical_operators -> LAND .)


state 54

    (34) logical_operators -> LOR .

    DIGIT           reduce using rule 34 (logical_operators -> LOR .)
    STRING_SENTENCE reduce using rule 34 (logical_operators -> LOR .)
    ID              reduce using rule 34 (logical_operators -> LOR .)


state 55

    (23) equality_expression -> equality_expression equality_operators . relational_expression
    (24) relational_expression -> . math_expression
    (25) relational_expression -> . relational_expression relational_operators math_expression
    (26) math_expression -> . primary_expression
    (27) math_expression -> . math_expression math_operators primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    relational_expression          shift and go to state 73
    math_expression                shift and go to state 38
    primary_expression             shift and go to state 39
    variable_expression            shift and go to state 40

state 56

    (35) equality_operators -> EQ .

    DIGIT           reduce using rule 35 (equality_operators -> EQ .)
    STRING_SENTENCE reduce using rule 35 (equality_operators -> EQ .)
    ID              reduce using rule 35 (equality_operators -> EQ .)


state 57

    (36) equality_operators -> NE .

    DIGIT           reduce using rule 36 (equality_operators -> NE .)
    STRING_SENTENCE reduce using rule 36 (equality_operators -> NE .)
    ID              reduce using rule 36 (equality_operators -> NE .)


state 58

    (25) relational_expression -> relational_expression relational_operators . math_expression
    (26) math_expression -> . primary_expression
    (27) math_expression -> . math_expression math_operators primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    math_expression                shift and go to state 74
    primary_expression             shift and go to state 39
    variable_expression            shift and go to state 40

state 59

    (37) relational_operators -> LT .

    DIGIT           reduce using rule 37 (relational_operators -> LT .)
    STRING_SENTENCE reduce using rule 37 (relational_operators -> LT .)
    ID              reduce using rule 37 (relational_operators -> LT .)


state 60

    (38) relational_operators -> GT .

    DIGIT           reduce using rule 38 (relational_operators -> GT .)
    STRING_SENTENCE reduce using rule 38 (relational_operators -> GT .)
    ID              reduce using rule 38 (relational_operators -> GT .)


state 61

    (39) relational_operators -> LE .

    DIGIT           reduce using rule 39 (relational_operators -> LE .)
    STRING_SENTENCE reduce using rule 39 (relational_operators -> LE .)
    ID              reduce using rule 39 (relational_operators -> LE .)


state 62

    (40) relational_operators -> GE .

    DIGIT           reduce using rule 40 (relational_operators -> GE .)
    STRING_SENTENCE reduce using rule 40 (relational_operators -> GE .)
    ID              reduce using rule 40 (relational_operators -> GE .)


state 63

    (27) math_expression -> math_expression math_operators . primary_expression
    (45) primary_expression -> . variable_expression
    (46) primary_expression -> . DIGIT
    (47) primary_expression -> . STRING_SENTENCE
    (48) variable_expression -> . ID

    DIGIT           shift and go to state 41
    STRING_SENTENCE shift and go to state 42
    ID              shift and go to state 19

    primary_expression             shift and go to state 75
    variable_expression            shift and go to state 40

state 64

    (41) math_operators -> PLUS .

    DIGIT           reduce using rule 41 (math_operators -> PLUS .)
    STRING_SENTENCE reduce using rule 41 (math_operators -> PLUS .)
    ID              reduce using rule 41 (math_operators -> PLUS .)


state 65

    (42) math_operators -> MINUS .

    DIGIT           reduce using rule 42 (math_operators -> MINUS .)
    STRING_SENTENCE reduce using rule 42 (math_operators -> MINUS .)
    ID              reduce using rule 42 (math_operators -> MINUS .)


state 66

    (43) math_operators -> TIMES .

    DIGIT           reduce using rule 43 (math_operators -> TIMES .)
    STRING_SENTENCE reduce using rule 43 (math_operators -> TIMES .)
    ID              reduce using rule 43 (math_operators -> TIMES .)


state 67

    (44) math_operators -> DIVIDE .

    DIGIT           reduce using rule 44 (math_operators -> DIVIDE .)
    STRING_SENTENCE reduce using rule 44 (math_operators -> DIVIDE .)
    ID              reduce using rule 44 (math_operators -> DIVIDE .)


state 68

    (14) iteration_statement -> DO block_statement_list WHILE conditional_expression . SEMI

    SEMI            shift and go to state 76


state 69

    (15) block_statement_list -> LBRACE statement_list RBRACE .

    WHILE           reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    CONSOLE         reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 15 (block_statement_list -> LBRACE statement_list RBRACE .)


state 70

    (28) input_expression -> CONSOLE DOT . READLINE

    READLINE        shift and go to state 50


state 71

    (29) output_expression -> CONSOLE DOT WRITELINE conditional_expression .

    SEMI            reduce using rule 29 (output_expression -> CONSOLE DOT WRITELINE conditional_expression .)


state 72

    (21) logical_expression -> logical_expression logical_operators equality_expression .
    (23) equality_expression -> equality_expression . equality_operators relational_expression
    (35) equality_operators -> . EQ
    (36) equality_operators -> . NE

    RPAREN          reduce using rule 21 (logical_expression -> logical_expression logical_operators equality_expression .)
    LAND            reduce using rule 21 (logical_expression -> logical_expression logical_operators equality_expression .)
    LOR             reduce using rule 21 (logical_expression -> logical_expression logical_operators equality_expression .)
    EQUALS          reduce using rule 21 (logical_expression -> logical_expression logical_operators equality_expression .)
    SEMI            reduce using rule 21 (logical_expression -> logical_expression logical_operators equality_expression .)
    EQ              shift and go to state 56
    NE              shift and go to state 57

    equality_operators             shift and go to state 55

state 73

    (23) equality_expression -> equality_expression equality_operators relational_expression .
    (25) relational_expression -> relational_expression . relational_operators math_expression
    (37) relational_operators -> . LT
    (38) relational_operators -> . GT
    (39) relational_operators -> . LE
    (40) relational_operators -> . GE

    EQ              reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    NE              reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    RPAREN          reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    LAND            reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    LOR             reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    EQUALS          reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    SEMI            reduce using rule 23 (equality_expression -> equality_expression equality_operators relational_expression .)
    LT              shift and go to state 59
    GT              shift and go to state 60
    LE              shift and go to state 61
    GE              shift and go to state 62

    relational_operators           shift and go to state 58

state 74

    (25) relational_expression -> relational_expression relational_operators math_expression .
    (27) math_expression -> math_expression . math_operators primary_expression
    (41) math_operators -> . PLUS
    (42) math_operators -> . MINUS
    (43) math_operators -> . TIMES
    (44) math_operators -> . DIVIDE

    LT              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    GT              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    LE              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    GE              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    EQ              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    NE              reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    RPAREN          reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    LAND            reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    LOR             reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    EQUALS          reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    SEMI            reduce using rule 25 (relational_expression -> relational_expression relational_operators math_expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67

    math_operators                 shift and go to state 63

state 75

    (27) math_expression -> math_expression math_operators primary_expression .

    PLUS            reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    MINUS           reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    TIMES           reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    DIVIDE          reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    LT              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    GT              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    LE              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    GE              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    EQ              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    NE              reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    RPAREN          reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    LAND            reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    LOR             reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    EQUALS          reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)
    SEMI            reduce using rule 27 (math_expression -> math_expression math_operators primary_expression .)


state 76

    (14) iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .

    IF              reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    WHILE           reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    DO              reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    CONSOLE         reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    INT             reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    BOOL            reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    STRING          reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    ID              reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    $end            reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)
    RBRACE          reduce using rule 14 (iteration_statement -> DO block_statement_list WHILE conditional_expression SEMI .)

